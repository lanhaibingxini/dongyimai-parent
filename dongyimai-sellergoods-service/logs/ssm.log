[DEBUG] [2020-12-14 20:17:15][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:17:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:17:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:17:33][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57facddc] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will not be managed by Spring
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:17:33][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57facddc]
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:17:33][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67acd108]
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:17:33][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67acd108]
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67acd108]
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67acd108]
  [DEBUG] [2020-12-14 20:17:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67acd108]
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:17:33][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:17:41][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 0(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), 1(String), 149187842867979(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new2 - 阿尔卡特 (OT-927) 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 299000.00(BigDecimal), null, 99999(Integer), (String), http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-04-11 20:38:38.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 536563(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new8- 三星 W999 黑色 电信3G手机 双卡双待双通(String), 下单送12000毫安移动电源！双3.5英寸魔焕炫屏，以非凡视野纵观天下时局，尊崇翻盖设计，张弛中，尽显从容气度！(String), 11.00(BigDecimal), null, 99999(Integer), (String), http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:27:54.0(Timestamp), 2015-04-12 17:10:43.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 562379(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-979) 冰川白 联通3G手机(String), 清仓！仅上海仓有货！(String), 309.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 605616(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-927) 单电版 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 249.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 635906(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 玫红 AK47 加强版 联通3G手机(String), 仅上海，广州，沈阳仓有货！预购从速！(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:32:31.0(Timestamp), 2015-03-08 21:32:31.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679532(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 曜石黑 AK47 加强版 联通3G手机(String), 少量库存，抢完即止！<a  target="blank"  href="http://sale.jd.com/act/bxYeI1346g.html?erpad_source=erpad">“领券更优惠！”</a>(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:31:36.0(Timestamp), 2015-03-08 21:31:36.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679533(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 B9120 钛灰色 联通3G手机 双卡双待双通(String), 下单即送10400毫安移动电源！再赠手机魔法盒！(String), 4399.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:29:27.0(Timestamp), 2015-03-08 21:29:27.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 691300(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 Note II (N7100) 云石白 联通3G手机(String), 经典回顾！超值价格值得拥有。(String), 1699.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:28:16.0(Timestamp), 2015-03-08 21:28:16.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 738388(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 64G(String), null, 6666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"64G"}(String), qq(String), 1369284(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 128G(String), null, 66666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"128G"}(String), qq(String), 1369285(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 64G(String), null, 666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"64G"}(String), qq(String), 1369286(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 128G(String), null, 6666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"128G"}(String), qq(String), 1369287(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: ww(String), 111111111111111111111111111111111111(String), 1111.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:26:40.0(Timestamp), 2015-03-08 21:26:40.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369288(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322] from current transaction
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww(String), 移动用户请认准移动4G版iPhone，带您畅享飞速4G/3G网络，快人一步！(String), 6666.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t4111/232/1823016308/39740/762c40b1/589ab57bNc19054fc.jpg(String), 560(Long), 0(String), 2015-03-08 21:29:11.0(Timestamp), 2015-03-08 21:29:11.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369289(Long)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2914c322]
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:17:41][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66f08679]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66f08679]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66f08679]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66f08679]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66f08679]
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:17:41][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@408dd843]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:17:41][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@408dd843]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@408dd843]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@408dd843]
  [DEBUG] [2020-12-14 20:17:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@408dd843]
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:17:41][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:17:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:17:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:18:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:18:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:18:33][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ae73ce9] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will not be managed by Spring
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:18:33][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c60749d]
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c60749d]
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c60749d]
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c60749d]
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c60749d]
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ae73ce9]
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:18:33][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0fb656]
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:18:33][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0fb656]
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0fb656]
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0fb656]
  [DEBUG] [2020-12-14 20:18:33][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b0fb656]
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:18:33][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:18:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:18:39][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 1(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), null, 149187842867979(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id = ? ) 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new2 - 阿尔卡特 (OT-927) 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 299000.00(BigDecimal), null, 99999(Integer), (String), http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-04-11 20:38:38.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 536563(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new8- 三星 W999 黑色 电信3G手机 双卡双待双通(String), 下单送12000毫安移动电源！双3.5英寸魔焕炫屏，以非凡视野纵观天下时局，尊崇翻盖设计，张弛中，尽显从容气度！(String), 11.00(BigDecimal), null, 99999(Integer), (String), http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:27:54.0(Timestamp), 2015-04-12 17:10:43.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 562379(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-979) 冰川白 联通3G手机(String), 清仓！仅上海仓有货！(String), 309.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 605616(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-927) 单电版 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 249.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 635906(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 玫红 AK47 加强版 联通3G手机(String), 仅上海，广州，沈阳仓有货！预购从速！(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:32:31.0(Timestamp), 2015-03-08 21:32:31.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679532(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 曜石黑 AK47 加强版 联通3G手机(String), 少量库存，抢完即止！<a  target="blank"  href="http://sale.jd.com/act/bxYeI1346g.html?erpad_source=erpad">“领券更优惠！”</a>(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:31:36.0(Timestamp), 2015-03-08 21:31:36.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679533(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 B9120 钛灰色 联通3G手机 双卡双待双通(String), 下单即送10400毫安移动电源！再赠手机魔法盒！(String), 4399.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:29:27.0(Timestamp), 2015-03-08 21:29:27.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 691300(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 Note II (N7100) 云石白 联通3G手机(String), 经典回顾！超值价格值得拥有。(String), 1699.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:28:16.0(Timestamp), 2015-03-08 21:28:16.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 738388(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 64G(String), null, 6666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"64G"}(String), qq(String), 1369284(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 128G(String), null, 66666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"128G"}(String), qq(String), 1369285(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 64G(String), null, 666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"64G"}(String), qq(String), 1369286(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 128G(String), null, 6666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"128G"}(String), qq(String), 1369287(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: ww(String), 111111111111111111111111111111111111(String), 1111.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:26:40.0(Timestamp), 2015-03-08 21:26:40.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369288(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05] from current transaction
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww(String), 移动用户请认准移动4G版iPhone，带您畅享飞速4G/3G网络，快人一步！(String), 6666.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t4111/232/1823016308/39740/762c40b1/589ab57bNc19054fc.jpg(String), 560(Long), 1(String), 2015-03-08 21:29:11.0(Timestamp), 2015-03-08 21:29:11.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369289(Long)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8c9f05]
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:18:39][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findItemListByGoodsIdandStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715d339f]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715d339f]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715d339f]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715d339f]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@715d339f]
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:18:39][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ff5910]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ff5910]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ff5910]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ff5910]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66ff5910]
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:18:39][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d146c1e]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:18:39][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d146c1e]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d146c1e]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d146c1e]
  [DEBUG] [2020-12-14 20:18:39][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d146c1e]
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:18:39][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:18:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:19:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:19:06][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:19:06][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6258dccb] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe233c9]
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe233c9]
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe233c9]
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe233c9]
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fe233c9]
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6258dccb]
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:19:06][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cbbb1ff]
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:19:06][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cbbb1ff]
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cbbb1ff]
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cbbb1ff]
  [DEBUG] [2020-12-14 20:19:06][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cbbb1ff]
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:19:06][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:19:09][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 0(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), 1(String), 149187842867979(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new2 - 阿尔卡特 (OT-927) 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 299000.00(BigDecimal), null, 99999(Integer), (String), http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-04-11 20:38:38.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 536563(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new8- 三星 W999 黑色 电信3G手机 双卡双待双通(String), 下单送12000毫安移动电源！双3.5英寸魔焕炫屏，以非凡视野纵观天下时局，尊崇翻盖设计，张弛中，尽显从容气度！(String), 11.00(BigDecimal), null, 99999(Integer), (String), http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:27:54.0(Timestamp), 2015-04-12 17:10:43.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 562379(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-979) 冰川白 联通3G手机(String), 清仓！仅上海仓有货！(String), 309.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 605616(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-927) 单电版 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 249.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 635906(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 玫红 AK47 加强版 联通3G手机(String), 仅上海，广州，沈阳仓有货！预购从速！(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:32:31.0(Timestamp), 2015-03-08 21:32:31.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679532(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 曜石黑 AK47 加强版 联通3G手机(String), 少量库存，抢完即止！<a  target="blank"  href="http://sale.jd.com/act/bxYeI1346g.html?erpad_source=erpad">“领券更优惠！”</a>(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:31:36.0(Timestamp), 2015-03-08 21:31:36.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679533(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 B9120 钛灰色 联通3G手机 双卡双待双通(String), 下单即送10400毫安移动电源！再赠手机魔法盒！(String), 4399.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:29:27.0(Timestamp), 2015-03-08 21:29:27.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 691300(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 Note II (N7100) 云石白 联通3G手机(String), 经典回顾！超值价格值得拥有。(String), 1699.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:28:16.0(Timestamp), 2015-03-08 21:28:16.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 738388(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 64G(String), null, 6666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"64G"}(String), qq(String), 1369284(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 128G(String), null, 66666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"128G"}(String), qq(String), 1369285(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 64G(String), null, 666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"64G"}(String), qq(String), 1369286(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 128G(String), null, 6666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"128G"}(String), qq(String), 1369287(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: ww(String), 111111111111111111111111111111111111(String), 1111.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:26:40.0(Timestamp), 2015-03-08 21:26:40.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369288(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce] from current transaction
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww(String), 移动用户请认准移动4G版iPhone，带您畅享飞速4G/3G网络，快人一步！(String), 6666.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t4111/232/1823016308/39740/762c40b1/589ab57bNc19054fc.jpg(String), 560(Long), 0(String), 2015-03-08 21:29:11.0(Timestamp), 2015-03-08 21:29:11.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369289(Long)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bcacce]
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:19:09][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50b8c1ec]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50b8c1ec]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50b8c1ec]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50b8c1ec]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50b8c1ec]
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:19:09][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4089f122]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:19:09][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4089f122]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4089f122]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4089f122]
  [DEBUG] [2020-12-14 20:19:09][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4089f122]
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:19:09][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:19:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:19:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:19:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:19:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:20:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:20:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:20:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:20:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:20:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:20:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:21:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:21:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:21:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:21:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:21:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:21:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:21:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:22:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:22:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:22:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:22:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:22:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:22:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:23:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:23:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:23:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:23:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:23:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:23:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 2ms
  [DEBUG] [2020-12-14 20:23:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:24:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:24:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:24:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:24:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:24:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:24:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:25:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:25:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:25:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:25:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:25:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:25:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:25:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:26:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:26:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:26:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:26:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:26:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:26:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:27:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:27:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:27:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:27:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 12ms
  [DEBUG] [2020-12-14 20:27:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:27:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:27:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:28:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:28:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:28:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:28:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:28:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:28:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:29:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:29:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:29:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:29:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:29:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:29:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:29:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:30:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:30:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:30:10][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:30:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:30:35][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@757140c3] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:30:35][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32add7f9]
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32add7f9]
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32add7f9]
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32add7f9]
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32add7f9]
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@757140c3]
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:30:35][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a311236]
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:30:35][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a311236]
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a311236]
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a311236]
  [DEBUG] [2020-12-14 20:30:35][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a311236]
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:30:35][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:30:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:30:48][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44]
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44]
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44] from current transaction
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 0(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), 1(String), 149187842867979(Long)
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44]
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44] from current transaction
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 0
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44]
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44]
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44]
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ab7d44]
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:30:48][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:30:48][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7879e2a0]
  [DEBUG] [2020-12-14 20:30:48][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:30:48][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7879e2a0]
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7879e2a0]
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7879e2a0]
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7879e2a0]
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:30:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 39ms
  [DEBUG] [2020-12-14 20:30:49][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baafb11]
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:30:49][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baafb11]
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baafb11]
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baafb11]
  [DEBUG] [2020-12-14 20:30:49][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@baafb11]
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:30:49][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:31:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:31:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:31:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:31:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:31:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:31:58][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5c6f7e] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:31:58][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac2e788]
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac2e788]
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac2e788]
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac2e788]
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ac2e788]
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:31:58][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:31:58][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5c6f7e]
  [DEBUG] [2020-12-14 20:31:58][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:31:59][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:31:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:31:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:31:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:31:59][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:31:59][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1003ed]
  [DEBUG] [2020-12-14 20:31:59][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:31:59][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:31:59][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:31:59][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:31:59][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:31:59][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:31:59][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:31:59][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1003ed]
  [DEBUG] [2020-12-14 20:31:59][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1003ed]
  [DEBUG] [2020-12-14 20:31:59][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1003ed]
  [DEBUG] [2020-12-14 20:31:59][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c1003ed]
  [DEBUG] [2020-12-14 20:31:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:31:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:31:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:31:59][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:03][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e2696] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:32:03][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f61b801]
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f61b801]
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f61b801]
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f61b801]
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f61b801]
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:03][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e2696]
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f15681]
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:32:03][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f15681]
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f15681]
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f15681]
  [DEBUG] [2020-12-14 20:32:03][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f15681]
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:32:03][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:05][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 1(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), null, 149187842867979(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id = ? ) 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new2 - 阿尔卡特 (OT-927) 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 299000.00(BigDecimal), null, 99999(Integer), (String), http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-04-11 20:38:38.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 536563(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new8- 三星 W999 黑色 电信3G手机 双卡双待双通(String), 下单送12000毫安移动电源！双3.5英寸魔焕炫屏，以非凡视野纵观天下时局，尊崇翻盖设计，张弛中，尽显从容气度！(String), 11.00(BigDecimal), null, 99999(Integer), (String), http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:27:54.0(Timestamp), 2015-04-12 17:10:43.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 562379(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-979) 冰川白 联通3G手机(String), 清仓！仅上海仓有货！(String), 309.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 605616(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-927) 单电版 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 249.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 635906(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 玫红 AK47 加强版 联通3G手机(String), 仅上海，广州，沈阳仓有货！预购从速！(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:32:31.0(Timestamp), 2015-03-08 21:32:31.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679532(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 曜石黑 AK47 加强版 联通3G手机(String), 少量库存，抢完即止！<a  target="blank"  href="http://sale.jd.com/act/bxYeI1346g.html?erpad_source=erpad">“领券更优惠！”</a>(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:31:36.0(Timestamp), 2015-03-08 21:31:36.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679533(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 B9120 钛灰色 联通3G手机 双卡双待双通(String), 下单即送10400毫安移动电源！再赠手机魔法盒！(String), 4399.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:29:27.0(Timestamp), 2015-03-08 21:29:27.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 691300(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 Note II (N7100) 云石白 联通3G手机(String), 经典回顾！超值价格值得拥有。(String), 1699.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:28:16.0(Timestamp), 2015-03-08 21:28:16.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 738388(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 64G(String), null, 6666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"64G"}(String), qq(String), 1369284(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 128G(String), null, 66666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"128G"}(String), qq(String), 1369285(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 64G(String), null, 666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"64G"}(String), qq(String), 1369286(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 128G(String), null, 6666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"128G"}(String), qq(String), 1369287(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: ww(String), 111111111111111111111111111111111111(String), 1111.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:26:40.0(Timestamp), 2015-03-08 21:26:40.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369288(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625] from current transaction
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww(String), 移动用户请认准移动4G版iPhone，带您畅享飞速4G/3G网络，快人一步！(String), 6666.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t4111/232/1823016308/39740/762c40b1/589ab57bNc19054fc.jpg(String), 560(Long), 1(String), 2015-03-08 21:29:11.0(Timestamp), 2015-03-08 21:29:11.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369289(Long)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26ed1625]
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:05][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findItemListByGoodsIdandStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c2e4a11]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c2e4a11]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c2e4a11]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c2e4a11]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c2e4a11]
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:05][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b798866]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b798866]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b798866]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b798866]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b798866]
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:05][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109de720]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:32:05][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109de720]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109de720]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109de720]
  [DEBUG] [2020-12-14 20:32:05][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@109de720]
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:32:05][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:32:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:32:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:32:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:32:56][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33461174] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:32:56][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62566da3]
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62566da3]
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62566da3]
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62566da3]
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62566da3]
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33461174]
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:32:56][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b65db6]
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:32:56][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b65db6]
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b65db6]
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b65db6]
  [DEBUG] [2020-12-14 20:32:56][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66b65db6]
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:32:56][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:33:00][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 1(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), null, 149187842867979(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id = ? ) 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new2 - 阿尔卡特 (OT-927) 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 299000.00(BigDecimal), null, 99999(Integer), (String), http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-04-11 20:38:38.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 536563(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new8- 三星 W999 黑色 电信3G手机 双卡双待双通(String), 下单送12000毫安移动电源！双3.5英寸魔焕炫屏，以非凡视野纵观天下时局，尊崇翻盖设计，张弛中，尽显从容气度！(String), 11.00(BigDecimal), null, 99999(Integer), (String), http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:27:54.0(Timestamp), 2015-04-12 17:10:43.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 562379(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-979) 冰川白 联通3G手机(String), 清仓！仅上海仓有货！(String), 309.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 605616(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-927) 单电版 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 249.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 635906(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 玫红 AK47 加强版 联通3G手机(String), 仅上海，广州，沈阳仓有货！预购从速！(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:32:31.0(Timestamp), 2015-03-08 21:32:31.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679532(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 曜石黑 AK47 加强版 联通3G手机(String), 少量库存，抢完即止！<a  target="blank"  href="http://sale.jd.com/act/bxYeI1346g.html?erpad_source=erpad">“领券更优惠！”</a>(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:31:36.0(Timestamp), 2015-03-08 21:31:36.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679533(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 B9120 钛灰色 联通3G手机 双卡双待双通(String), 下单即送10400毫安移动电源！再赠手机魔法盒！(String), 4399.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:29:27.0(Timestamp), 2015-03-08 21:29:27.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 691300(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 Note II (N7100) 云石白 联通3G手机(String), 经典回顾！超值价格值得拥有。(String), 1699.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:28:16.0(Timestamp), 2015-03-08 21:28:16.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 738388(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 64G(String), null, 6666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"64G"}(String), qq(String), 1369284(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 128G(String), null, 66666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"128G"}(String), qq(String), 1369285(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 64G(String), null, 666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"64G"}(String), qq(String), 1369286(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 128G(String), null, 6666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"128G"}(String), qq(String), 1369287(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: ww(String), 111111111111111111111111111111111111(String), 1111.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:26:40.0(Timestamp), 2015-03-08 21:26:40.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369288(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b] from current transaction
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww(String), 移动用户请认准移动4G版iPhone，带您畅享飞速4G/3G网络，快人一步！(String), 6666.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t4111/232/1823016308/39740/762c40b1/589ab57bNc19054fc.jpg(String), 560(Long), 1(String), 2015-03-08 21:29:11.0(Timestamp), 2015-03-08 21:29:11.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369289(Long)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2392e70b]
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:33:00][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findItemListByGoodsIdandStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4600c53]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4600c53]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4600c53]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4600c53]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4600c53]
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:33:00][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@995a674]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@995a674]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@995a674]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@995a674]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@995a674]
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:33:00][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4922287a]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:33:00][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4922287a]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4922287a]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4922287a]
  [DEBUG] [2020-12-14 20:33:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4922287a]
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:33:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:33:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:33:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:33:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:33:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:33:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:34:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:34:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:34:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:34:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:34:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:35:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:35:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:35:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:35:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:35:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:35:55][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54b5b5bc] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54b5b5bc]
  [DEBUG] [2020-12-14 20:35:55][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43e3faa3]
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43e3faa3]
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43e3faa3]
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43e3faa3]
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43e3faa3]
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:35:55][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11571352]
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:35:55][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11571352]
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11571352]
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11571352]
  [DEBUG] [2020-12-14 20:35:55][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11571352]
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:35:55][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:35:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:36:00][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 0(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), 1(String), 149187842867979(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new2 - 阿尔卡特 (OT-927) 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 299000.00(BigDecimal), null, 99999(Integer), (String), http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-04-11 20:38:38.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 536563(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new8- 三星 W999 黑色 电信3G手机 双卡双待双通(String), 下单送12000毫安移动电源！双3.5英寸魔焕炫屏，以非凡视野纵观天下时局，尊崇翻盖设计，张弛中，尽显从容气度！(String), 11.00(BigDecimal), null, 99999(Integer), (String), http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:27:54.0(Timestamp), 2015-04-12 17:10:43.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 562379(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-979) 冰川白 联通3G手机(String), 清仓！仅上海仓有货！(String), 309.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 605616(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-927) 单电版 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 249.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 635906(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 玫红 AK47 加强版 联通3G手机(String), 仅上海，广州，沈阳仓有货！预购从速！(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:32:31.0(Timestamp), 2015-03-08 21:32:31.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679532(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 曜石黑 AK47 加强版 联通3G手机(String), 少量库存，抢完即止！<a  target="blank"  href="http://sale.jd.com/act/bxYeI1346g.html?erpad_source=erpad">“领券更优惠！”</a>(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:31:36.0(Timestamp), 2015-03-08 21:31:36.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679533(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 B9120 钛灰色 联通3G手机 双卡双待双通(String), 下单即送10400毫安移动电源！再赠手机魔法盒！(String), 4399.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:29:27.0(Timestamp), 2015-03-08 21:29:27.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 691300(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 Note II (N7100) 云石白 联通3G手机(String), 经典回顾！超值价格值得拥有。(String), 1699.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 0(String), 2015-03-08 21:28:16.0(Timestamp), 2015-03-08 21:28:16.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 738388(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 64G(String), null, 6666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"64G"}(String), qq(String), 1369284(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 128G(String), null, 66666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"128G"}(String), qq(String), 1369285(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 64G(String), null, 666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"64G"}(String), qq(String), 1369286(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 128G(String), null, 6666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 0(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"128G"}(String), qq(String), 1369287(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: ww(String), 111111111111111111111111111111111111(String), 1111.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 0(String), 2015-03-08 21:26:40.0(Timestamp), 2015-03-08 21:26:40.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369288(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658] from current transaction
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww(String), 移动用户请认准移动4G版iPhone，带您畅享飞速4G/3G网络，快人一步！(String), 6666.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t4111/232/1823016308/39740/762c40b1/589ab57bNc19054fc.jpg(String), 560(Long), 0(String), 2015-03-08 21:29:11.0(Timestamp), 2015-03-08 21:29:11.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369289(Long)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c89e658]
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:36:00][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b4173dc]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b4173dc]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b4173dc]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b4173dc]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b4173dc]
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:36:00][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed5aba7]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:36:00][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed5aba7]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed5aba7]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed5aba7]
  [DEBUG] [2020-12-14 20:36:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed5aba7]
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:36:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:36:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:36:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:36:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:36:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:37:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 7ms
  [DEBUG] [2020-12-14 20:37:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:37:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:37:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:37:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:37:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:38:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:38:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:38:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:38:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:38:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:39:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:39:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:39:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:39:16][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17643c38] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:39:16][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7c5972]
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7c5972]
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7c5972]
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7c5972]
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a7c5972]
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17643c38]
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:39:16][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710d686b]
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:39:16][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710d686b]
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710d686b]
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710d686b]
  [DEBUG] [2020-12-14 20:39:16][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710d686b]
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:39:16][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:39:18][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f]
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f]
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f] from current transaction
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 0(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), 1(String), 149187842867979(Long)
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f]
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f] from current transaction
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:39:18][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 0
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f]
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f]
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f]
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b258d2f]
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:39:18][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:39:18][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:39:18][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb66a8e]
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb66a8e]
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb66a8e]
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb66a8e]
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eb66a8e]
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:39:19][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73dcc2e9]
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:39:19][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73dcc2e9]
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73dcc2e9]
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73dcc2e9]
  [DEBUG] [2020-12-14 20:39:19][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73dcc2e9]
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:39:19][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:39:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:39:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 2ms
  [DEBUG] [2020-12-14 20:39:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:40:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:40:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:40:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:40:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:41:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:41:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:41:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:41:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:41:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:41:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:42:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:42:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:42:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:42:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:42:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:43:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:43:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:43:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:43:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:43:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:43:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:44:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:44:13][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e89e8f6] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:44:13][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a729bcb]
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a729bcb]
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a729bcb]
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a729bcb]
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a729bcb]
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e89e8f6]
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:13][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f270dd]
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:44:13][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f270dd]
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f270dd]
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f270dd]
  [DEBUG] [2020-12-14 20:44:13][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30f270dd]
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:44:13][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:44:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:44:38][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b6d23d7] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will not be managed by Spring
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:44:38][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@148db47a] for JDBC transaction
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] to manual commit
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@498a20d8]
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] will be managed by Spring
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@498a20d8]
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@498a20d8]
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@498a20d8]
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@498a20d8]
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@148db47a]
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@148db47a] after transaction
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b6d23d7]
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:38][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8939f70]
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:44:38][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8939f70]
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8939f70]
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8939f70]
  [DEBUG] [2020-12-14 20:44:38][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8939f70]
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:44:38][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:47][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058] from current transaction
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 0(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), 1(String), 149187842867979(Long)
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058] from current transaction
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 0
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5723b058]
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:47][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1769c0f]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1769c0f]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1769c0f]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1769c0f]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1769c0f]
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:47][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] for JDBC transaction
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] to manual commit
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac8052e]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] will be managed by Spring
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:44:47][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac8052e]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac8052e]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac8052e]
  [DEBUG] [2020-12-14 20:44:47][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ac8052e]
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf]
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@6a02a9bf] after transaction
  [DEBUG] [2020-12-14 20:44:47][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:44:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:45:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:45:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:45:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:45:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:45:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:46:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:46:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:46:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:46:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:46:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:47:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:47:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:47:15][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:47:29][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:47:42][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:47:55][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:48:04][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /10.10.43.164:53334, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:48:09][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:48:22][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:48:35][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 1ms
  [DEBUG] [2020-12-14 20:48:49][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [DEBUG] [2020-12-14 20:49:02][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f263602000a after 0ms
  [INFO] [2020-12-14 20:50:53][org.springframework.web.context.ContextLoader]Root WebApplicationContext: initialization started
  [DEBUG] [2020-12-14 20:50:53][org.springframework.web.context.support.StandardServletEnvironment]Adding [servletConfigInitParams] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:53][org.springframework.web.context.support.StandardServletEnvironment]Adding [servletContextInitParams] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:53][org.springframework.web.context.support.StandardServletEnvironment]Adding [jndiProperties] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:53][org.springframework.web.context.support.StandardServletEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:53][org.springframework.web.context.support.StandardServletEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:53][org.springframework.web.context.support.StandardServletEnvironment]Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.web.context.support.StandardServletEnvironment]Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
  [INFO] [2020-12-14 20:50:53][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
  [INFO] [2020-12-14 20:50:53][org.springframework.web.context.support.XmlWebApplicationContext]Refreshing Root WebApplicationContext: startup date [Mon Dec 14 20:50:53 CST 2020]; root of context hierarchy
  [DEBUG] [2020-12-14 20:50:53][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:53][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:53][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in directory tree [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\spring]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\spring] for files matching pattern [E:/idea/workspace/dongyimai-parent/dongyimai-sellergoods-service/target/classes/spring/applicationContext*.xml]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in jar file [file:/D:/repository/com/offcn/dongyimai-common/1.0/dongyimai-common-1.0.jar]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in jar file [file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath*:spring/applicationContext*.xml] to resources [file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\spring\applicationContext-service.xml], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\spring\applicationContext-tx.xml], URL [jar:file:/D:/repository/com/offcn/dongyimai-common/1.0/dongyimai-common-1.0.jar!/spring/applicationContext-redis.xml], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/spring/applicationContext-dao.xml]]
  [INFO] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\spring\applicationContext-service.xml]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd=org/springframework/oxm/config/spring-oxm-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://dubbo.apache.org/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/data/solr/spring-solr.xsd=org/springframework/data/solr/config/spring-solr-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/compat/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/jms/spring-jms-3.2.xsd=org/springframework/jms/config/spring-jms-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/data/solr/spring-solr-1.0.xsd=org/springframework/data/solr/config/spring-solr-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/oxm/spring-oxm.xsd=org/springframework/oxm/config/spring-oxm-4.2.xsd, http://www.springframework.org/schema/jms/spring-jms-3.1.xsd=org/springframework/jms/config/spring-jms-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd=org/springframework/oxm/config/spring-oxm-4.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframework/jms/config/spring-jms-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.2.xsd=org/springframework/oxm/config/spring-oxm-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/jms/spring-jms-3.0.xsd=org/springframework/jms/config/spring-jms-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/oxm/spring-oxm-4.0.xsd=org/springframework/oxm/config/spring-oxm-4.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd=org/springframework/oxm/config/spring-oxm-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/compat/dubbo.xsd
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/data/solr=org.springframework.data.solr.config.SolrNamespaceHandler, http://dubbo.apache.org/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/oxm=org.springframework.oxm.config.OxmNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler}
  [INFO] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\spring\applicationContext-tx.xml]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-4.2.xsd
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.2.xsd
  [DEBUG] [2020-12-14 20:50:53][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
  [INFO] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from URL [jar:file:/D:/repository/com/offcn/dongyimai-common/1.0/dongyimai-common-1.0.jar!/spring/applicationContext-redis.xml]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
  [INFO] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/spring/applicationContext-dao.xml]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-4.2.xsd
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.2.xsd
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.BeanDefinitionParserDelegate]Neither XML 'id' nor 'name' specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 18 bean definitions from location pattern [classpath*:spring/applicationContext*.xml]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.web.context.support.XmlWebApplicationContext]Bean factory for Root WebApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory@ce73daf: defining beans [dubbo,dongyimai-sellergoods-service,com.alibaba.dubbo.config.RegistryConfig,referenceAnnotationBeanPostProcessor,com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor#0,transactionManager,org.springframework.transaction.config.internalTransactionalEventListenerFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,poolConfig,jedisConnectionFactory,redisTemplate,org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0]; root of factory hierarchy
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Registering scope 'request' with implementation [org.springframework.web.context.request.RequestScope@23ced8a5]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Registering scope 'session' with implementation [org.springframework.web.context.request.SessionScope@6186b1ad]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Registering scope 'globalSession' with implementation [org.springframework.web.context.request.SessionScope@34d856c8]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Registering scope 'application' with implementation [org.springframework.web.context.support.ServletContextScope@1d64f71a]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor#0' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  [INFO] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in directory tree [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl] for files matching pattern [E:/idea/workspace/dongyimai-parent/dongyimai-sellergoods-service/target/classes/com/offcn/sellergoods/service/impl/**/*.class]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath*:com/offcn/sellergoods/service/impl/**/*.class] to resources [file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\BrandServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsDescServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemCatServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SellerServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationOptionServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\TypeTemplateServiceImpl.class]]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\BrandServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsDescServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemCatServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SellerServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationOptionServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\TypeTemplateServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in directory tree [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Searching directory [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl] for files matching pattern [E:/idea/workspace/dongyimai-parent/dongyimai-sellergoods-service/target/classes/com/offcn/sellergoods/service/impl/**/*.class]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath*:com/offcn/sellergoods/service/impl/**/*.class] to resources [file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\BrandServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsDescServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemCatServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SellerServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationOptionServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationServiceImpl.class], file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\TypeTemplateServiceImpl.class]]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\BrandServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsDescServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemCatServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SellerServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationOptionServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationServiceImpl.class]
  [DEBUG] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner]Identified candidate component class: file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\TypeTemplateServiceImpl.class]
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:brandServiceImpl:com.offcn.sellergoods.service.BrandService, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:goodsDescServiceImpl:com.offcn.sellergoods.service.GoodsDescService, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:goodsServiceImpl:com.offcn.sellergoods.service.GoodsService, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:itemCatServiceImpl:com.offcn.sellergoods.service.ItemCatService, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:itemServiceImpl:com.offcn.sellergoods.service.ItemService, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:sellerServiceImpl:com.offcn.sellergoods.service.SellerService, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:specificationOptionServiceImpl:com.offcn.sellergoods.service.SpecificationOptionService, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:specificationServiceImpl:com.offcn.sellergoods.service.SpecificationService, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] The BeanDefinition[Root bean: class [com.alibaba.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:typeTemplateServiceImpl:com.offcn.sellergoods.service.TypeTemplateService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:54][com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor] [DUBBO] 9 annotated Dubbo's @Service Components { [Bean definition with name 'brandServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.BrandServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\BrandServiceImpl.class], Bean definition with name 'goodsDescServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.GoodsDescServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsDescServiceImpl.class], Bean definition with name 'goodsServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.GoodsServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\GoodsServiceImpl.class], Bean definition with name 'itemCatServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.ItemCatServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemCatServiceImpl.class], Bean definition with name 'itemServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.ItemServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\ItemServiceImpl.class], Bean definition with name 'sellerServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.SellerServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SellerServiceImpl.class], Bean definition with name 'specificationOptionServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.SpecificationOptionServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationOptionServiceImpl.class], Bean definition with name 'specificationServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.SpecificationServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\SpecificationServiceImpl.class], Bean definition with name 'typeTemplateServiceImpl': Generic bean: class [com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service\target\classes\com\offcn\sellergoods\service\impl\TypeTemplateServiceImpl.class]] } were scanned under package[com.offcn.sellergoods.service.impl], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.StandardEnvironment]Adding [systemProperties] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.StandardEnvironment]Adding [systemEnvironment] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.StandardEnvironment]Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in jar file [file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath*:com/offcn/mapper/**/*.class] to resources [URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbAddressMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbAreasMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbBrandMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbCitiesMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbContentCategoryMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbContentMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbFreightTemplateMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbGoodsDescMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbGoodsMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbItemCatMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbItemMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbOrderItemMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbOrderMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbPayLogMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbProvincesMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSeckillGoodsMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSeckillOrderMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSellerMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSpecificationMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSpecificationOptionMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbTypeTemplateMapper.class], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbUserMapper.class]]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbAddressMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbAreasMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbBrandMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbCitiesMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbContentCategoryMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbContentMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbFreightTemplateMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbGoodsDescMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbGoodsMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbItemCatMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbItemMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbOrderItemMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbOrderMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbPayLogMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbProvincesMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSeckillGoodsMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSeckillOrderMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSellerMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSpecificationMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbSpecificationOptionMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbTypeTemplateMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Identified candidate component class: URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/com/offcn/mapper/TbUserMapper.class]
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbAddressMapper' and 'com.offcn.mapper.TbAddressMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbAddressMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbAreasMapper' and 'com.offcn.mapper.TbAreasMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbAreasMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbBrandMapper' and 'com.offcn.mapper.TbBrandMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbBrandMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbCitiesMapper' and 'com.offcn.mapper.TbCitiesMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbCitiesMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbContentCategoryMapper' and 'com.offcn.mapper.TbContentCategoryMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbContentCategoryMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbContentMapper' and 'com.offcn.mapper.TbContentMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbContentMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbFreightTemplateMapper' and 'com.offcn.mapper.TbFreightTemplateMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbFreightTemplateMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbGoodsDescMapper' and 'com.offcn.mapper.TbGoodsDescMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbGoodsDescMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbGoodsMapper' and 'com.offcn.mapper.TbGoodsMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbGoodsMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbItemCatMapper' and 'com.offcn.mapper.TbItemCatMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbItemCatMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbItemMapper' and 'com.offcn.mapper.TbItemMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbItemMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbOrderItemMapper' and 'com.offcn.mapper.TbOrderItemMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbOrderItemMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbOrderMapper' and 'com.offcn.mapper.TbOrderMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbOrderMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbPayLogMapper' and 'com.offcn.mapper.TbPayLogMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbPayLogMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbProvincesMapper' and 'com.offcn.mapper.TbProvincesMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbProvincesMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbSeckillGoodsMapper' and 'com.offcn.mapper.TbSeckillGoodsMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbSeckillGoodsMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbSeckillOrderMapper' and 'com.offcn.mapper.TbSeckillOrderMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbSeckillOrderMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbSellerMapper' and 'com.offcn.mapper.TbSellerMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbSellerMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbSpecificationMapper' and 'com.offcn.mapper.TbSpecificationMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbSpecificationMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbSpecificationOptionMapper' and 'com.offcn.mapper.TbSpecificationOptionMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbSpecificationOptionMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbTypeTemplateMapper' and 'com.offcn.mapper.TbTypeTemplateMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbTypeTemplateMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Creating MapperFactoryBean with name 'tbUserMapper' and 'com.offcn.mapper.TbUserMapper' mapperInterface
  [DEBUG] [2020-12-14 20:50:54][org.mybatis.spring.mapper.ClassPathMapperScanner]Enabling autowire by type for MapperFactoryBean with name 'tbUserMapper'.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in jar file [file:/D:/repository/com/offcn/dongyimai-common/1.0/dongyimai-common-1.0.jar]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Looking for matching resources in jar file [file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.io.support.PathMatchingResourcePatternResolver]Resolved location pattern [classpath*:properties/*.properties] to resources [URL [jar:file:/D:/repository/com/offcn/dongyimai-common/1.0/dongyimai-common-1.0.jar!/properties/redis-config.properties], URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/properties/db.properties]]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.MutablePropertySources]Adding [environmentProperties] PropertySource with lowest search precedence
  [INFO] [2020-12-14 20:50:54][org.springframework.context.support.PropertySourcesPlaceholderConfigurer]Loading properties file from URL [jar:file:/D:/repository/com/offcn/dongyimai-common/1.0/dongyimai-common-1.0.jar!/properties/redis-config.properties]
  [INFO] [2020-12-14 20:50:54][org.springframework.context.support.PropertySourcesPlaceholderConfigurer]Loading properties file from URL [jar:file:/D:/repository/com/offcn/dongyimai-dao/1.0/dongyimai-dao-1.0.jar!/properties/db.properties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.MutablePropertySources]Adding [localProperties] PropertySource with lowest search precedence
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxIdle' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxIdle' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxIdle' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxIdle' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/redis.maxIdle]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/redis.maxIdle] not found - trying original name [redis.maxIdle]. javax.naming.NameNotFoundException: Name [redis.maxIdle] is not bound in this Context. Unable to find [redis.maxIdle].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [redis.maxIdle]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [redis.maxIdle] threw NamingException with message: Name [redis.maxIdle] is not bound in this Context. Unable to find [redis.maxIdle].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxIdle' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxIdle' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'redis.maxIdle' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxIdle' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'redis.maxIdle' in [localProperties] with type [String] and value '300 '
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxWait' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxWait' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxWait' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxWait' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/redis.maxWait]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/redis.maxWait] not found - trying original name [redis.maxWait]. javax.naming.NameNotFoundException: Name [redis.maxWait] is not bound in this Context. Unable to find [redis.maxWait].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [redis.maxWait]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [redis.maxWait] threw NamingException with message: Name [redis.maxWait] is not bound in this Context. Unable to find [redis.maxWait].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxWait' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxWait' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'redis.maxWait' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.maxWait' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'redis.maxWait' in [localProperties] with type [String] and value '3000 '
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.testOnBorrow' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.testOnBorrow' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.testOnBorrow' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.testOnBorrow' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/redis.testOnBorrow]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/redis.testOnBorrow] not found - trying original name [redis.testOnBorrow]. javax.naming.NameNotFoundException: Name [redis.testOnBorrow] is not bound in this Context. Unable to find [redis.testOnBorrow].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [redis.testOnBorrow]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [redis.testOnBorrow] threw NamingException with message: Name [redis.testOnBorrow] is not bound in this Context. Unable to find [redis.testOnBorrow].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.testOnBorrow' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.testOnBorrow' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'redis.testOnBorrow' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.testOnBorrow' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'redis.testOnBorrow' in [localProperties] with type [String] and value 'true '
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.host' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.host' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.host' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.host' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/redis.host]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/redis.host] not found - trying original name [redis.host]. javax.naming.NameNotFoundException: Name [redis.host] is not bound in this Context. Unable to find [redis.host].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [redis.host]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [redis.host] threw NamingException with message: Name [redis.host] is not bound in this Context. Unable to find [redis.host].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.host' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.host' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'redis.host' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.host' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'redis.host' in [localProperties] with type [String] and value '192.168.188.146'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.pass' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.pass' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.pass' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.pass' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/redis.pass]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/redis.pass] not found - trying original name [redis.pass]. javax.naming.NameNotFoundException: Name [redis.pass] is not bound in this Context. Unable to find [redis.pass].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [redis.pass]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [redis.pass] threw NamingException with message: Name [redis.pass] is not bound in this Context. Unable to find [redis.pass].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.pass' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.pass' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'redis.pass' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'redis.pass' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'redis.pass' in [localProperties] with type [String] and value 'offcn123'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.url' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.url' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.url' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.url' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/jdbc.url]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/jdbc.url] not found - trying original name [jdbc.url]. javax.naming.NameNotFoundException: Name [jdbc.url] is not bound in this Context. Unable to find [jdbc.url].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [jdbc.url]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [jdbc.url] threw NamingException with message: Name [jdbc.url] is not bound in this Context. Unable to find [jdbc.url].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.url' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.url' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'jdbc.url' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.url' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'jdbc.url' in [localProperties] with type [String] and value 'jdbc:mysql://localhost:3306/dongyimai?characterEncoding=utf-8'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.username' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.username' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.username' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.username' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/jdbc.username]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/jdbc.username] not found - trying original name [jdbc.username]. javax.naming.NameNotFoundException: Name [jdbc.username] is not bound in this Context. Unable to find [jdbc.username].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [jdbc.username]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [jdbc.username] threw NamingException with message: Name [jdbc.username] is not bound in this Context. Unable to find [jdbc.username].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.username' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.username' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'jdbc.username' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.username' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'jdbc.username' in [localProperties] with type [String] and value 'root'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.password' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.password' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.password' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.password' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/jdbc.password]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/jdbc.password] not found - trying original name [jdbc.password]. javax.naming.NameNotFoundException: Name [jdbc.password] is not bound in this Context. Unable to find [jdbc.password].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [jdbc.password]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [jdbc.password] threw NamingException with message: Name [jdbc.password] is not bound in this Context. Unable to find [jdbc.password].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.password' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.password' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'jdbc.password' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.password' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'jdbc.password' in [localProperties] with type [String] and value 'root'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.driver' in [environmentProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.driver' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.driver' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.driver' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/jdbc.driver]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/jdbc.driver] not found - trying original name [jdbc.driver]. javax.naming.NameNotFoundException: Name [jdbc.driver] is not bound in this Context. Unable to find [jdbc.driver].
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [jdbc.driver]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [jdbc.driver] threw NamingException with message: Name [jdbc.driver] is not bound in this Context. Unable to find [jdbc.driver].. Returning null.
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.driver' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.driver' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'jdbc.driver' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'jdbc.driver' in [localProperties]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.core.env.PropertySourcesPropertyResolver]Found key 'jdbc.driver' in [localProperties] with type [String] and value 'com.mysql.jdbc.Driver'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'referenceAnnotationBeanPostProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'referenceAnnotationBeanPostProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'referenceAnnotationBeanPostProcessor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'referenceAnnotationBeanPostProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
  [INFO] [2020-12-14 20:50:54][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.web.context.support.XmlWebApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b603aaa]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.web.context.support.XmlWebApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3a2c4b3b]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.ui.context.support.UiApplicationContextUtils]Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@691d3a92]
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ce73daf: defining beans [dubbo,dongyimai-sellergoods-service,com.alibaba.dubbo.config.RegistryConfig,referenceAnnotationBeanPostProcessor,com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor#0,transactionManager,org.springframework.transaction.config.internalTransactionalEventListenerFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,poolConfig,jedisConnectionFactory,redisTemplate,org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,dataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,brandServiceImpl,goodsDescServiceImpl,goodsServiceImpl,itemCatServiceImpl,itemServiceImpl,sellerServiceImpl,specificationOptionServiceImpl,specificationServiceImpl,typeTemplateServiceImpl,ServiceBean:brandServiceImpl:com.offcn.sellergoods.service.BrandService,ServiceBean:goodsDescServiceImpl:com.offcn.sellergoods.service.GoodsDescService,ServiceBean:goodsServiceImpl:com.offcn.sellergoods.service.GoodsService,ServiceBean:itemCatServiceImpl:com.offcn.sellergoods.service.ItemCatService,ServiceBean:itemServiceImpl:com.offcn.sellergoods.service.ItemService,ServiceBean:sellerServiceImpl:com.offcn.sellergoods.service.SellerService,ServiceBean:specificationOptionServiceImpl:com.offcn.sellergoods.service.SpecificationOptionService,ServiceBean:specificationServiceImpl:com.offcn.sellergoods.service.SpecificationService,ServiceBean:typeTemplateServiceImpl:com.offcn.sellergoods.service.TypeTemplateService,tbAddressMapper,tbAreasMapper,tbBrandMapper,tbCitiesMapper,tbContentCategoryMapper,tbContentMapper,tbFreightTemplateMapper,tbGoodsDescMapper,tbGoodsMapper,tbItemCatMapper,tbItemMapper,tbOrderItemMapper,tbOrderMapper,tbPayLogMapper,tbProvincesMapper,tbSeckillGoodsMapper,tbSeckillOrderMapper,tbSellerMapper,tbSpecificationMapper,tbSpecificationOptionMapper,tbTypeTemplateMapper,tbUserMapper,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper]Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dongyimai-sellergoods-service' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'referenceAnnotationBeanPostProcessor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'transactionManager'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'transactionManager'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dataSource'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dataSource'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dataSource' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dataSource'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'transactionManager'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'transactionManager'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'poolConfig'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'poolConfig'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'poolConfig' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'poolConfig'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'jedisConnectionFactory'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'jedisConnectionFactory'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'jedisConnectionFactory' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'poolConfig'
  [DEBUG] [2020-12-14 20:50:54][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'jedisConnectionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'jedisConnectionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'redisTemplate'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'redisTemplate'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'redisTemplate' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'jedisConnectionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'redisTemplate'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'redisTemplate'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dataSource'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'sqlSessionFactory' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dataSource'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.mybatis.spring.SqlSessionFactoryBean]Parsed configuration file: 'class path resource [mybatis/SqlMapConfig.xml]'
  [DEBUG] [2020-12-14 20:50:55][org.mybatis.spring.SqlSessionFactoryBean]Property 'mapperLocations' was not specified or no matching resources found
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.mybatis.spring.mapper.MapperScannerConfigurer#0'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'brandServiceImpl'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'brandServiceImpl'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.BrandServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbBrandMapper com.offcn.sellergoods.service.impl.BrandServiceImpl.brandMapper
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'brandServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'brandServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbBrandMapper com.offcn.sellergoods.service.impl.BrandServiceImpl.brandMapper
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbAddressMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbAddressMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbAddressMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbAddressMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbAreasMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbAreasMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbAreasMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbAreasMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbBrandMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbBrandMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbCitiesMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbCitiesMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbCitiesMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbCitiesMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbContentCategoryMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbContentCategoryMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbContentCategoryMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbContentCategoryMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbContentMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbContentMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbContentMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbContentMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbFreightTemplateMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbFreightTemplateMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbFreightTemplateMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbFreightTemplateMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbGoodsDescMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbGoodsDescMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbGoodsMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbGoodsMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbGoodsMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbGoodsMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbItemCatMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbItemCatMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbItemMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbItemMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbOrderItemMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbOrderItemMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbOrderItemMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbOrderItemMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbOrderMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbOrderMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbOrderMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbOrderMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbPayLogMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbPayLogMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbPayLogMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbPayLogMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbProvincesMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbProvincesMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbProvincesMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbProvincesMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbSeckillGoodsMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbSeckillGoodsMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbSeckillGoodsMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbSeckillGoodsMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbSeckillOrderMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbSeckillOrderMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbSeckillOrderMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbSeckillOrderMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbSellerMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbSellerMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbSpecificationMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbSpecificationMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbSpecificationMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbSpecificationMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbSpecificationOptionMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbSpecificationOptionMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbTypeTemplateMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbTypeTemplateMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbTypeTemplateMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbTypeTemplateMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'tbUserMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'tbUserMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'tbUserMapper' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning eagerly cached instance of singleton bean 'tbUserMapper' that is not fully initialized yet - a consequence of a circular reference
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbUserMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbUserMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbUserMapper'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbTypeTemplateMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:55][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbTypeTemplateMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbTypeTemplateMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbSpecificationOptionMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbSpecificationMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbSpecificationMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbSpecificationMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbSellerMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbSeckillOrderMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbSeckillOrderMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbSeckillOrderMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbSeckillGoodsMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbSeckillGoodsMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbSeckillGoodsMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbProvincesMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbProvincesMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbProvincesMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbPayLogMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbPayLogMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbPayLogMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbOrderMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbOrderMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbOrderMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbOrderItemMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbOrderItemMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbOrderItemMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbItemMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbItemCatMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbGoodsMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbGoodsMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbGoodsMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbGoodsDescMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbFreightTemplateMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbFreightTemplateMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbFreightTemplateMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbContentMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbContentMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbContentMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbContentCategoryMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbContentCategoryMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbContentCategoryMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbCitiesMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbCitiesMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbCitiesMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbBrandMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbAreasMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbAreasMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbAreasMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Autowiring by type from bean name 'tbAddressMapper' via property 'sqlSessionFactory' to bean named 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'tbAddressMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'tbAddressMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'brandServiceImpl' to bean named 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'brandServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'goodsDescServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'goodsDescServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.GoodsDescServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbGoodsDescMapper com.offcn.sellergoods.service.impl.GoodsDescServiceImpl.goodsDescMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'goodsDescServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'goodsDescServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbGoodsDescMapper com.offcn.sellergoods.service.impl.GoodsDescServiceImpl.goodsDescMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'goodsDescServiceImpl' to bean named 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'goodsDescServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'goodsServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'goodsServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.GoodsServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbGoodsMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.goodsMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.GoodsServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbGoodsDescMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.goodsDescMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.GoodsServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbItemMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.itemMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.GoodsServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbBrandMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.brandMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.GoodsServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbItemCatMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.itemCatMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.GoodsServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbSellerMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.sellerMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'goodsServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'goodsServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbGoodsMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.goodsMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbGoodsMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'goodsServiceImpl' to bean named 'tbGoodsMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'goodsServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbGoodsDescMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.goodsDescMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'goodsServiceImpl' to bean named 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'goodsServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbItemMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.itemMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'goodsServiceImpl' to bean named 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'goodsServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbBrandMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.brandMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'goodsServiceImpl' to bean named 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'goodsServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbItemCatMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.itemCatMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'goodsServiceImpl' to bean named 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'goodsServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbSellerMapper com.offcn.sellergoods.service.impl.GoodsServiceImpl.sellerMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'goodsServiceImpl' to bean named 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]Adding transactional method 'GoodsServiceImpl.add' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:50:56][org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator]Creating implicit proxy for bean 'goodsServiceImpl' with 0 common interceptors and 1 specific interceptors
  [DEBUG] [2020-12-14 20:50:56][org.springframework.aop.framework.JdkDynamicAopProxy]Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.offcn.sellergoods.service.impl.GoodsServiceImpl@653f1e97]
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'goodsServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'itemCatServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'itemCatServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.ItemCatServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbItemCatMapper com.offcn.sellergoods.service.impl.ItemCatServiceImpl.itemCatMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.ItemCatServiceImpl]: AutowiredFieldElement for private org.springframework.data.redis.core.RedisTemplate com.offcn.sellergoods.service.impl.ItemCatServiceImpl.redisTemplate
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'itemCatServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'itemCatServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbItemCatMapper com.offcn.sellergoods.service.impl.ItemCatServiceImpl.itemCatMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'itemCatServiceImpl' to bean named 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'itemCatServiceImpl': AutowiredFieldElement for private org.springframework.data.redis.core.RedisTemplate com.offcn.sellergoods.service.impl.ItemCatServiceImpl.redisTemplate
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'redisTemplate'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'itemCatServiceImpl' to bean named 'redisTemplate'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'itemCatServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'itemServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'itemServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.ItemServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbItemMapper com.offcn.sellergoods.service.impl.ItemServiceImpl.itemMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'itemServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'itemServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbItemMapper com.offcn.sellergoods.service.impl.ItemServiceImpl.itemMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'itemServiceImpl' to bean named 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'itemServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'sellerServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'sellerServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.SellerServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbSellerMapper com.offcn.sellergoods.service.impl.SellerServiceImpl.sellerMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'sellerServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'sellerServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbSellerMapper com.offcn.sellergoods.service.impl.SellerServiceImpl.sellerMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'sellerServiceImpl' to bean named 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'sellerServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'specificationOptionServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'specificationOptionServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.SpecificationOptionServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbSpecificationOptionMapper com.offcn.sellergoods.service.impl.SpecificationOptionServiceImpl.specificationOptionMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'specificationOptionServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'specificationOptionServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbSpecificationOptionMapper com.offcn.sellergoods.service.impl.SpecificationOptionServiceImpl.specificationOptionMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'specificationOptionServiceImpl' to bean named 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'specificationOptionServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'specificationServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'specificationServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.SpecificationServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbSpecificationMapper com.offcn.sellergoods.service.impl.SpecificationServiceImpl.specificationMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.SpecificationServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbSpecificationOptionMapper com.offcn.sellergoods.service.impl.SpecificationServiceImpl.specificationOptionMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'specificationServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'specificationServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbSpecificationMapper com.offcn.sellergoods.service.impl.SpecificationServiceImpl.specificationMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSpecificationMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'specificationServiceImpl' to bean named 'tbSpecificationMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'specificationServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbSpecificationOptionMapper com.offcn.sellergoods.service.impl.SpecificationServiceImpl.specificationOptionMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'specificationServiceImpl' to bean named 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'specificationServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'typeTemplateServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'typeTemplateServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbTypeTemplateMapper com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl.typeTemplateMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl]: AutowiredFieldElement for private com.offcn.mapper.TbSpecificationOptionMapper com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl.specificationOptionMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Registered injected element on class [com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl]: AutowiredFieldElement for private org.springframework.data.redis.core.RedisTemplate com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl.redisTemplate
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'typeTemplateServiceImpl' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'typeTemplateServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbTypeTemplateMapper com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl.typeTemplateMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbTypeTemplateMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'typeTemplateServiceImpl' to bean named 'tbTypeTemplateMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'typeTemplateServiceImpl': AutowiredFieldElement for private com.offcn.mapper.TbSpecificationOptionMapper com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl.specificationOptionMapper
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'typeTemplateServiceImpl' to bean named 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.InjectionMetadata]Processing injected element of bean 'typeTemplateServiceImpl': AutowiredFieldElement for private org.springframework.data.redis.core.RedisTemplate com.offcn.sellergoods.service.impl.TypeTemplateServiceImpl.redisTemplate
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'redisTemplate'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]Autowiring by type from bean name 'typeTemplateServiceImpl' to bean named 'redisTemplate'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'typeTemplateServiceImpl'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:brandServiceImpl:com.offcn.sellergoods.service.BrandService'
  [DEBUG] [2020-12-14 20:50:56][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:brandServiceImpl:com.offcn.sellergoods.service.BrandService'
  [DEBUG] [2020-12-14 20:50:56][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:56][com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory] [DUBBO] No spring extension(bean) named:defaultCompiler, try to find an extension(bean) of type java.lang.String, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:56][com.alibaba.dubbo.config.spring.extension.SpringExtensionFactory] [DUBBO] No spring extension(bean) named:defaultCompiler, type:java.lang.String found, stop get bean., dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0, boolean arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:brandServiceImpl:com.offcn.sellergoods.service.BrandService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'brandServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:brandServiceImpl:com.offcn.sellergoods.service.BrandService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:brandServiceImpl:com.offcn.sellergoods.service.BrandService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:goodsDescServiceImpl:com.offcn.sellergoods.service.GoodsDescService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:goodsDescServiceImpl:com.offcn.sellergoods.service.GoodsDescService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:goodsDescServiceImpl:com.offcn.sellergoods.service.GoodsDescService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'goodsDescServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:goodsDescServiceImpl:com.offcn.sellergoods.service.GoodsDescService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:goodsDescServiceImpl:com.offcn.sellergoods.service.GoodsDescService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:goodsServiceImpl:com.offcn.sellergoods.service.GoodsService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:goodsServiceImpl:com.offcn.sellergoods.service.GoodsService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:goodsServiceImpl:com.offcn.sellergoods.service.GoodsService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'goodsServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:goodsServiceImpl:com.offcn.sellergoods.service.GoodsService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:goodsServiceImpl:com.offcn.sellergoods.service.GoodsService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:itemCatServiceImpl:com.offcn.sellergoods.service.ItemCatService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:itemCatServiceImpl:com.offcn.sellergoods.service.ItemCatService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:itemCatServiceImpl:com.offcn.sellergoods.service.ItemCatService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'itemCatServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:itemCatServiceImpl:com.offcn.sellergoods.service.ItemCatService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:itemCatServiceImpl:com.offcn.sellergoods.service.ItemCatService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:itemServiceImpl:com.offcn.sellergoods.service.ItemService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:itemServiceImpl:com.offcn.sellergoods.service.ItemService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:itemServiceImpl:com.offcn.sellergoods.service.ItemService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'itemServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:itemServiceImpl:com.offcn.sellergoods.service.ItemService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:itemServiceImpl:com.offcn.sellergoods.service.ItemService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:sellerServiceImpl:com.offcn.sellergoods.service.SellerService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:sellerServiceImpl:com.offcn.sellergoods.service.SellerService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:sellerServiceImpl:com.offcn.sellergoods.service.SellerService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sellerServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:sellerServiceImpl:com.offcn.sellergoods.service.SellerService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:sellerServiceImpl:com.offcn.sellergoods.service.SellerService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:specificationOptionServiceImpl:com.offcn.sellergoods.service.SpecificationOptionService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:specificationOptionServiceImpl:com.offcn.sellergoods.service.SpecificationOptionService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:specificationOptionServiceImpl:com.offcn.sellergoods.service.SpecificationOptionService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'specificationOptionServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:specificationOptionServiceImpl:com.offcn.sellergoods.service.SpecificationOptionService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:specificationOptionServiceImpl:com.offcn.sellergoods.service.SpecificationOptionService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:specificationServiceImpl:com.offcn.sellergoods.service.SpecificationService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:specificationServiceImpl:com.offcn.sellergoods.service.SpecificationService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:specificationServiceImpl:com.offcn.sellergoods.service.SpecificationService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'specificationServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:specificationServiceImpl:com.offcn.sellergoods.service.SpecificationService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:specificationServiceImpl:com.offcn.sellergoods.service.SpecificationService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'ServiceBean:typeTemplateServiceImpl:com.offcn.sellergoods.service.TypeTemplateService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'ServiceBean:typeTemplateServiceImpl:com.offcn.sellergoods.service.TypeTemplateService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'ServiceBean:typeTemplateServiceImpl:com.offcn.sellergoods.service.TypeTemplateService' to allow for resolving potential circular references
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'typeTemplateServiceImpl'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'ServiceBean:typeTemplateServiceImpl:com.offcn.sellergoods.service.TypeTemplateService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dongyimai-sellergoods-service'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'ServiceBean:typeTemplateServiceImpl:com.offcn.sellergoods.service.TypeTemplateService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbAddressMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbAreasMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbBrandMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbCitiesMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbContentCategoryMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbContentMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbFreightTemplateMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbGoodsDescMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbGoodsMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbItemCatMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbItemMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbOrderItemMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbOrderMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbPayLogMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbProvincesMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSeckillGoodsMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSeckillOrderMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSellerMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSpecificationMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbSpecificationOptionMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbTypeTemplateMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'tbUserMapper'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.web.context.support.XmlWebApplicationContext]Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6cb5289b]
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'lifecycleProcessor'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'sqlSessionFactory'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:brandServiceImpl:com.offcn.sellergoods.service.BrandService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:goodsDescServiceImpl:com.offcn.sellergoods.service.GoodsDescService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:goodsServiceImpl:com.offcn.sellergoods.service.GoodsService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:itemCatServiceImpl:com.offcn.sellergoods.service.ItemCatService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:itemServiceImpl:com.offcn.sellergoods.service.ItemService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:sellerServiceImpl:com.offcn.sellergoods.service.SellerService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:specificationOptionServiceImpl:com.offcn.sellergoods.service.SpecificationOptionService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:specificationServiceImpl:com.offcn.sellergoods.service.SpecificationService'
  [DEBUG] [2020-12-14 20:50:57][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'ServiceBean:typeTemplateServiceImpl:com.offcn.sellergoods.service.TypeTemplateService'
  [INFO] [2020-12-14 20:50:57][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.BrandService, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.rpc.Invocation arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null");
String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:57][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.BrandService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:57][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.BrandService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:57][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.BrandService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950257324, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [WARN] [2020-12-14 20:50:57][com.alibaba.dubbo.qos.protocol.QosProtocolWrapper] [DUBBO] Fail to start qos server: , dubbo version: 2.6.4, current host: 10.10.43.164
  java.lang.NoClassDefFoundError: io/netty/channel/EventLoopGroup
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.startQosServer(QosProtocolWrapper.java:95)
	at com.alibaba.dubbo.qos.protocol.QosProtocolWrapper.export(QosProtocolWrapper.java:59)
	at com.alibaba.dubbo.rpc.Protocol$Adaptive.export(Protocol$Adaptive.java)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(ServiceConfig.java:513)
	at com.alibaba.dubbo.config.ServiceConfig.doExportUrls(ServiceConfig.java:358)
	at com.alibaba.dubbo.config.ServiceConfig.doExport(ServiceConfig.java:317)
	at com.alibaba.dubbo.config.ServiceConfig.export(ServiceConfig.java:216)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:123)
	at com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(ServiceBean.java:49)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:163)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:136)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:381)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:335)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:855)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:541)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4939)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: io.netty.channel.EventLoopGroup
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1702)
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1547)
	... 27 more
[DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:57][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /10.10.43.164:20881, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:57][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adaptive implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "curator"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:57][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file C:\Users\Administrator\.dubbo\dubbo-registry-dongyimai-sellergoods-service-192.168.188.128:2181.cache, data: {com.offcn.sellergoods.service.SpecificationOptionService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947874613, com.offcn.sellergoods.service.GoodsService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947873747, com.offcn.sellergoods.service.BrandService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947867814, com.offcn.sellergoods.service.SpecificationService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947874680, com.offcn.sellergoods.service.ItemCatService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947873981, com.offcn.sellergoods.service.ItemService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947874188, com.offcn.sellergoods.service.SellerService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947874488, com.offcn.sellergoods.service.GoodsDescService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947873260, com.offcn.service.BrandService=empty://10.10.43.164:20881/com.offcn.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.service.BrandService&methods=findAll&pid=63096&revision=1.0&side=provider&timestamp=1606217070775, com.offcn.sellergoods.service.TypeTemplateService=empty://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=37884&revision=1.0&side=provider&timestamp=1607947874737}, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][org.apache.curator.utils.Compatibility]Running in ZooKeeper 3.4.x compatibility mode
  [INFO] [2020-12-14 20:50:58][org.apache.curator.framework.imps.CuratorFrameworkImpl]Starting
  [DEBUG] [2020-12-14 20:50:58][org.apache.curator.CuratorZookeeperClient]Starting
  [DEBUG] [2020-12-14 20:50:58][org.apache.curator.ConnectionState]Starting
  [DEBUG] [2020-12-14 20:50:58][org.apache.curator.ConnectionState]reset
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:zookeeper.version=3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:host.name=OFFCN-20200807Z
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:java.version=1.8.0_191
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:java.vendor=Oracle Corporation
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:java.home=D:\jdk\jre
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:java.class.path=D:\apache-maven-3.5.4\boot\plexus-classworlds-2.5.2.jar;D:\IntelliJ IDEA 2020.1.3\lib\idea_rt.jar
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:java.library.path=D:\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\MySQL\bin;D:\jdk\bin;D:\apache-maven-3.5.4\bin;D:\IntelliJ IDEA 2019.1\jre64;D:\SSH Secure Shell;.
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:java.compiler=<NA>
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:os.name=Windows 7
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:os.arch=amd64
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:os.version=6.1
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:user.name=Administrator
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:user.home=C:\Users\Administrator
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Client environment:user.dir=E:\idea\workspace\dongyimai-parent\dongyimai-sellergoods-service
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ZooKeeper]Initiating client connection, connectString=192.168.188.128:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@2c129f2
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]zookeeper.disableAutoWatchReset is false
  [INFO] [2020-12-14 20:50:58][org.apache.curator.framework.imps.CuratorFrameworkImpl]Default schema
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Opening socket connection to server 192.168.188.128/192.168.188.128:2181. Will not attempt to authenticate using SASL (unknown error)
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Socket connection established to 192.168.188.128/192.168.188.128:2181, initiating session
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Session establishment request sent on 192.168.188.128/192.168.188.128:2181
  [INFO] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Session establishment complete on server 192.168.188.128/192.168.188.128:2181, sessionid = 0x1765f2636020014, negotiated timeout = 40000
  [DEBUG] [2020-12-14 20:50:58][org.apache.curator.ConnectionState]Negotiated session timeout: 40000
  [INFO] [2020-12-14 20:50:58][org.apache.curator.framework.state.ConnectionStateManager]State change: CONNECTED
  [DEBUG] [2020-12-14 20:50:58][org.apache.curator.framework.imps.CuratorFrameworkImpl]Clearing sleep for 0 operations
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 1,3  replyHeader:: 1,3145,0  request:: '/dubbo/com.offcn.sellergoods.service.BrandService/providers,F  response:: s{63,63,1606217447057,1606217447057,0,134,0,0,12,0,3141} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,3146,0  request:: '/dubbo/com.offcn.sellergoods.service.BrandService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.BrandService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.BrandService%2526methods%253Dadd%252CselectOptionList%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950257333,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.BrandService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.BrandService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.BrandService%2526methods%253Dadd%252CselectOptionList%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950257333 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 3,3  replyHeader:: 3,3146,0  request:: '/dubbo/com.offcn.sellergoods.service.BrandService/configurators,F  response:: s{68,68,1606217447078,1606217447078,0,0,0,0,9,0,68} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 4,12  replyHeader:: 4,3146,0  request:: '/dubbo/com.offcn.sellergoods.service.BrandService/configurators,T  response:: v{},s{68,68,1606217447078,1606217447078,0,0,0,0,9,0,68} 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.BrandService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.BrandService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950257333], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.GoodsDescService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.GoodsDescService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.GoodsDescService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.GoodsDescService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950258354, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 5,3  replyHeader:: 5,3146,0  request:: '/dubbo/com.offcn.sellergoods.service.GoodsDescService/providers,F  response:: s{143,143,1606305750069,1606305750069,0,116,0,0,9,0,3141} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,3147,0  request:: '/dubbo/com.offcn.sellergoods.service.GoodsDescService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.GoodsDescService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.GoodsDescService%2526methods%253Dadd%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258354,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.GoodsDescService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.GoodsDescService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.GoodsDescService%2526methods%253Dadd%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258354 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 7,3  replyHeader:: 7,3147,0  request:: '/dubbo/com.offcn.sellergoods.service.GoodsDescService/configurators,F  response:: s{148,148,1606305750089,1606305750089,0,0,0,0,9,0,148} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 8,12  replyHeader:: 8,3147,0  request:: '/dubbo/com.offcn.sellergoods.service.GoodsDescService/configurators,T  response:: v{},s{148,148,1606305750089,1606305750089,0,0,0,0,9,0,148} 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsDescService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsDescService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258354], dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.GoodsService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.GoodsService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.GoodsService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.GoodsService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950258457, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 9,3  replyHeader:: 9,3147,0  request:: '/dubbo/com.offcn.sellergoods.service.GoodsService/providers,F  response:: s{150,150,1606305750154,1606305750154,0,116,0,0,9,0,3141} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 10,1  replyHeader:: 10,3148,0  request:: '/dubbo/com.offcn.sellergoods.service.GoodsService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.GoodsService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.GoodsService%2526methods%253Dadd%252CfindItemListByGoodsIdandStatus%252CupdateStatus%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258457,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.GoodsService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.GoodsService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.GoodsService%2526methods%253Dadd%252CfindItemListByGoodsIdandStatus%252CupdateStatus%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258457 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 11,3  replyHeader:: 11,3148,0  request:: '/dubbo/com.offcn.sellergoods.service.GoodsService/configurators,F  response:: s{155,155,1606305750167,1606305750167,0,0,0,0,9,0,155} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 12,12  replyHeader:: 12,3148,0  request:: '/dubbo/com.offcn.sellergoods.service.GoodsService/configurators,T  response:: v{},s{155,155,1606305750167,1606305750167,0,0,0,0,9,0,155} 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.GoodsService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.GoodsService&methods=add,findItemListByGoodsIdandStatus,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258457], dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.ItemCatService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.ItemCatService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.ItemCatService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.ItemCatService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950258528, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 13,3  replyHeader:: 13,3148,0  request:: '/dubbo/com.offcn.sellergoods.service.ItemCatService/providers,F  response:: s{157,157,1606305750226,1606305750226,0,116,0,0,9,0,3141} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 14,1  replyHeader:: 14,3149,0  request:: '/dubbo/com.offcn.sellergoods.service.ItemCatService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.ItemCatService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.ItemCatService%2526methods%253Dadd%252CfindByParentId%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258528,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.ItemCatService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.ItemCatService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.ItemCatService%2526methods%253Dadd%252CfindByParentId%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258528 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 15,3  replyHeader:: 15,3149,0  request:: '/dubbo/com.offcn.sellergoods.service.ItemCatService/configurators,F  response:: s{161,161,1606305750241,1606305750241,0,0,0,0,9,0,161} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 16,12  replyHeader:: 16,3149,0  request:: '/dubbo/com.offcn.sellergoods.service.ItemCatService/configurators,T  response:: v{},s{161,161,1606305750241,1606305750241,0,0,0,0,9,0,161} 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.ItemCatService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemCatService&methods=add,findByParentId,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258528], dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.ItemService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.ItemService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.ItemService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.ItemService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950258624, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 17,3  replyHeader:: 17,3149,0  request:: '/dubbo/com.offcn.sellergoods.service.ItemService/providers,F  response:: s{164,164,1606305750363,1606305750363,0,116,0,0,12,0,3141} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 18,1  replyHeader:: 18,3150,0  request:: '/dubbo/com.offcn.sellergoods.service.ItemService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.ItemService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.ItemService%2526methods%253Dadd%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258624,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.ItemService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.ItemService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.ItemService%2526methods%253Dadd%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258624 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 19,3  replyHeader:: 19,3150,0  request:: '/dubbo/com.offcn.sellergoods.service.ItemService/configurators,F  response:: s{169,169,1606305750446,1606305750446,0,0,0,0,12,0,169} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 20,12  replyHeader:: 20,3150,0  request:: '/dubbo/com.offcn.sellergoods.service.ItemService/configurators,T  response:: v{},s{169,169,1606305750446,1606305750446,0,0,0,0,12,0,169} 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.ItemService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.ItemService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258624], dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.SellerService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.SellerService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.SellerService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.SellerService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950258796, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 21,3  replyHeader:: 21,3150,0  request:: '/dubbo/com.offcn.sellergoods.service.SellerService/providers,F  response:: s{172,172,1606305750574,1606305750574,0,116,0,0,12,0,3141} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 22,1  replyHeader:: 22,3151,0  request:: '/dubbo/com.offcn.sellergoods.service.SellerService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.SellerService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.SellerService%2526methods%253Dadd%252CupdateStatus%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258796,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.SellerService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.SellerService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.SellerService%2526methods%253Dadd%252CupdateStatus%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258796 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 23,3  replyHeader:: 23,3151,0  request:: '/dubbo/com.offcn.sellergoods.service.SellerService/configurators,F  response:: s{177,177,1606305750638,1606305750638,0,0,0,0,9,0,177} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 24,12  replyHeader:: 24,3151,0  request:: '/dubbo/com.offcn.sellergoods.service.SellerService/configurators,T  response:: v{},s{177,177,1606305750638,1606305750638,0,0,0,0,9,0,177} 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SellerService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SellerService&methods=add,updateStatus,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258796], dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.SpecificationOptionService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.SpecificationOptionService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.SpecificationOptionService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.SpecificationOptionService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950258888, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 25,3  replyHeader:: 25,3151,0  request:: '/dubbo/com.offcn.sellergoods.service.SpecificationOptionService/providers,F  response:: s{180,180,1606305750797,1606305750797,0,116,0,0,12,0,3141} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 26,1  replyHeader:: 26,3152,0  request:: '/dubbo/com.offcn.sellergoods.service.SpecificationOptionService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.SpecificationOptionService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.SpecificationOptionService%2526methods%253Dadd%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258888,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.SpecificationOptionService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.SpecificationOptionService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.SpecificationOptionService%2526methods%253Dadd%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950258888 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 27,3  replyHeader:: 27,3152,0  request:: '/dubbo/com.offcn.sellergoods.service.SpecificationOptionService/configurators,F  response:: s{185,185,1606305750826,1606305750826,0,0,0,0,9,0,185} 
  [DEBUG] [2020-12-14 20:50:58][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 28,12  replyHeader:: 28,3152,0  request:: '/dubbo/com.offcn.sellergoods.service.SpecificationOptionService/configurators,T  response:: v{},s{185,185,1606305750826,1606305750826,0,0,0,0,9,0,185} 
  [INFO] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:58][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationOptionService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationOptionService&methods=add,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950258888], dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.SpecificationService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.SpecificationService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.SpecificationService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.SpecificationService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950259005, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 29,3  replyHeader:: 29,3152,0  request:: '/dubbo/com.offcn.sellergoods.service.SpecificationService/providers,F  response:: s{188,188,1606305750936,1606305750936,0,116,0,0,12,0,3141} 
  [DEBUG] [2020-12-14 20:50:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 30,1  replyHeader:: 30,3153,0  request:: '/dubbo/com.offcn.sellergoods.service.SpecificationService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.SpecificationService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.SpecificationService%2526methods%253Dadd%252CselectOptionList%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950259006,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.SpecificationService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.SpecificationService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.SpecificationService%2526methods%253Dadd%252CselectOptionList%252CfindOne%252Cupdate%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950259006 
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 31,3  replyHeader:: 31,3153,0  request:: '/dubbo/com.offcn.sellergoods.service.SpecificationService/configurators,F  response:: s{193,193,1606305750986,1606305750986,0,0,0,0,9,0,193} 
  [DEBUG] [2020-12-14 20:50:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 32,12  replyHeader:: 32,3153,0  request:: '/dubbo/com.offcn.sellergoods.service.SpecificationService/configurators,T  response:: v{},s{193,193,1606305750986,1606305750986,0,0,0,0,9,0,193} 
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.SpecificationService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.SpecificationService&methods=add,selectOptionList,findOne,update,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259006], dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.offcn.sellergoods.service.TypeTemplateService, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.TypeTemplateService to local registry, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.offcn.sellergoods.service.TypeTemplateService to url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.offcn.sellergoods.service.TypeTemplateService url dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&bind.ip=10.10.43.164&bind.port=20881&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107 to registry registry://192.168.188.128:2181/com.alibaba.dubbo.registry.RegistryService?application=dongyimai-sellergoods-service&dubbo=2.0.2&pid=51384&registry=zookeeper&timestamp=1607950259107, dubbo version: 2.6.4, current host: 10.10.43.164
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 33,3  replyHeader:: 33,3153,0  request:: '/dubbo/com.offcn.sellergoods.service.TypeTemplateService/providers,F  response:: s{196,196,1606305751085,1606305751085,0,116,0,0,9,0,3141} 
  [DEBUG] [2020-12-14 20:50:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 34,1  replyHeader:: 34,3154,0  request:: '/dubbo/com.offcn.sellergoods.service.TypeTemplateService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.TypeTemplateService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.TypeTemplateService%2526methods%253Dadd%252CselectOptionList%252CfindOne%252Cupdate%252CfindSpecList%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950259107,#31302e31302e34332e313634,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.offcn.sellergoods.service.TypeTemplateService/providers/dubbo%253A%252F%252F10.10.43.164%253A20881%252Fcom.offcn.sellergoods.service.TypeTemplateService%253Fanyhost%253Dtrue%2526application%253Ddongyimai-sellergoods-service%2526dubbo%253D2.0.2%2526generic%253Dfalse%2526interface%253Dcom.offcn.sellergoods.service.TypeTemplateService%2526methods%253Dadd%252CselectOptionList%252CfindOne%252Cupdate%252CfindSpecList%252CfindPage%252Cdelete%252CfindAll%2526pid%253D51384%2526revision%253D1.0%2526side%253Dprovider%2526timestamp%253D1607950259107 
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 35,3  replyHeader:: 35,3154,0  request:: '/dubbo/com.offcn.sellergoods.service.TypeTemplateService/configurators,F  response:: s{200,200,1606305751112,1606305751112,0,0,0,0,9,0,200} 
  [DEBUG] [2020-12-14 20:50:59][org.apache.zookeeper.ClientCnxn]Reading reply sessionid:0x1765f2636020014, packet:: clientPath:null serverPath:null finished:false header:: 36,12  replyHeader:: 36,3154,0  request:: '/dubbo/com.offcn.sellergoods.service.TypeTemplateService/configurators,T  response:: v{},s{200,200,1606305751112,1606305751112,0,0,0,0,9,0,200} 
  [INFO] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107, urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] original override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][com.alibaba.dubbo.registry.integration.RegistryProtocol] [DUBBO] subscribe url: provider://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107, override urls: [empty://10.10.43.164:20881/com.offcn.sellergoods.service.TypeTemplateService?anyhost=true&application=dongyimai-sellergoods-service&category=configurators&check=false&dubbo=2.0.2&generic=false&interface=com.offcn.sellergoods.service.TypeTemplateService&methods=add,selectOptionList,findOne,update,findSpecList,findPage,delete,findAll&pid=51384&revision=1.0&side=provider&timestamp=1607950259107], dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:50:59][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
  [DEBUG] [2020-12-14 20:50:59][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
  [DEBUG] [2020-12-14 20:50:59][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
  [DEBUG] [2020-12-14 20:50:59][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
  [DEBUG] [2020-12-14 20:50:59][org.springframework.jndi.JndiLocatorDelegate]Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
  [DEBUG] [2020-12-14 20:50:59][org.springframework.jndi.JndiTemplate]Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
  [DEBUG] [2020-12-14 20:50:59][org.springframework.jndi.JndiPropertySource]JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
  [DEBUG] [2020-12-14 20:50:59][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
  [DEBUG] [2020-12-14 20:50:59][org.springframework.core.env.PropertySourcesPropertyResolver]Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
  [DEBUG] [2020-12-14 20:50:59][org.springframework.core.env.PropertySourcesPropertyResolver]Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
  [DEBUG] [2020-12-14 20:50:59][org.springframework.web.context.ContextLoader]Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
  [INFO] [2020-12-14 20:50:59][org.springframework.web.context.ContextLoader]Root WebApplicationContext: initialization completed in 5691 ms
  [DEBUG] [2020-12-14 20:51:14][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 1618ms
  [DEBUG] [2020-12-14 20:51:24][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:51:38][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 1ms
  [DEBUG] [2020-12-14 20:51:40][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:51:40][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:51:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
  [DEBUG] [2020-12-14 20:51:40][org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]Adding transactional method 'GoodsServiceImpl.findPage' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:51:40][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'transactionManager'
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38a5ac5b] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [INFO] [2020-12-14 20:51:40][com.alibaba.druid.pool.DruidDataSource]{dataSource-1} inited
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] will not be managed by Spring
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442504af]
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442504af]
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442504af]
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442504af]
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@442504af]
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:51:40][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:51:40][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38a5ac5b]
  [DEBUG] [2020-12-14 20:51:40][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:51:41][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:51:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:51:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] for JDBC transaction
  [DEBUG] [2020-12-14 20:51:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] to manual commit
  [DEBUG] [2020-12-14 20:51:41][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:51:41][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40a11729]
  [DEBUG] [2020-12-14 20:51:41][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] will be managed by Spring
  [DEBUG] [2020-12-14 20:51:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:51:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:51:41][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:51:41][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:51:41][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:51:41][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:51:41][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40a11729]
  [DEBUG] [2020-12-14 20:51:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40a11729]
  [DEBUG] [2020-12-14 20:51:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40a11729]
  [DEBUG] [2020-12-14 20:51:41][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40a11729]
  [DEBUG] [2020-12-14 20:51:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:51:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3]
  [DEBUG] [2020-12-14 20:51:41][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] after transaction
  [DEBUG] [2020-12-14 20:51:41][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:51:51][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 11ms
  [DEBUG] [2020-12-14 20:51:53][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:51:53][org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]Adding transactional method 'GoodsServiceImpl.delete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:51:53][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:51:53][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] for JDBC transaction
  [DEBUG] [2020-12-14 20:51:53][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] to manual commit
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5]
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] will be managed by Spring
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5]
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5] from current transaction
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 0(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), 1(String), 149187842867979(Long)
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5]
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5] from current transaction
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:51:53][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 0
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5]
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5]
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5]
  [DEBUG] [2020-12-14 20:51:53][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cfabee5]
  [DEBUG] [2020-12-14 20:51:53][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:51:53][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3]
  [DEBUG] [2020-12-14 20:51:53][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] after transaction
  [DEBUG] [2020-12-14 20:51:53][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:51:54][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] for JDBC transaction
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] to manual commit
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@318ea2a2]
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] will be managed by Spring
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@318ea2a2]
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@318ea2a2]
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@318ea2a2]
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@318ea2a2]
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3]
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] after transaction
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:51:54][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] for JDBC transaction
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] to manual commit
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4893eb3b]
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] will be managed by Spring
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:51:54][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4893eb3b]
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4893eb3b]
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4893eb3b]
  [DEBUG] [2020-12-14 20:51:54][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4893eb3b]
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3]
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] after transaction
  [DEBUG] [2020-12-14 20:51:54][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:52:04][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:52:18][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:52:31][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:52:44][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:52:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:52:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:58219, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:52:58][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:53:11][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:53:24][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:53:38][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:53:51][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 1ms
  [DEBUG] [2020-12-14 20:53:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:58219, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:53:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:54:04][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:54:18][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:54:31][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:54:44][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 1ms
  [DEBUG] [2020-12-14 20:54:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:54:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:58219, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:54:58][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:55:11][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:55:24][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:55:38][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:55:51][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:55:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:58219, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:55:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:56:04][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:56:18][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:56:31][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 1ms
  [DEBUG] [2020-12-14 20:56:44][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:56:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:58219, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:56:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:56:58][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:57:11][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:57:24][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:57:38][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:57:51][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:57:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:58219, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:57:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:58:04][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:58:18][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:58:31][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:58:44][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 158ms
  [DEBUG] [2020-12-14 20:58:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.10.43.164:58219, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:58:57][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:58:58][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 1ms
  [DEBUG] [2020-12-14 20:59:07][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@244a174f] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@53fcdfe3] will not be managed by Spring
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:59:07][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@244a174f]
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180992d7]
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180992d7]
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180992d7]
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180992d7]
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180992d7]
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:59:07][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9aa145]
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:59:07][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9aa145]
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9aa145]
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9aa145]
  [DEBUG] [2020-12-14 20:59:07][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c9aa145]
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 20:59:07][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:59:11][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:59:17][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772] from current transaction
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 0(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), 1(String), 149187842867979(Long)
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772] from current transaction
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 0
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d968772]
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:59:17][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559949f9]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559949f9]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559949f9]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559949f9]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@559949f9]
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:59:17][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8a171e]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:59:17][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8a171e]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8a171e]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8a171e]
  [DEBUG] [2020-12-14 20:59:17][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8a171e]
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 20:59:17][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:59:24][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:59:38][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:59:51][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 20:59:59][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72f59346] was not registered for synchronization because synchronization is not active
  [DEBUG] [2020-12-14 20:59:59][org.springframework.jdbc.datasource.DataSourceUtils]Fetching JDBC Connection from DataSource
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will not be managed by Spring
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbItemCatMapper.selectByExample]==>  Preparing: select id, parent_id, name, type_id from tb_item_cat 
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbItemCatMapper.selectByExample]==> Parameters: 
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbItemCatMapper.selectByExample]<==      Total: 1201
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72f59346]
  [DEBUG] [2020-12-14 20:59:59][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 20:59:59][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 20:59:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 20:59:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 20:59:59][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49657d13]
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 20:59:59][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49657d13]
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49657d13]
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49657d13]
  [DEBUG] [2020-12-14 20:59:59][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49657d13]
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 21:00:00][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 21:00:00][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 21:00:00][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c786f9c]
  [DEBUG] [2020-12-14 21:00:00][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 21:00:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 21:00:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 21:00:00][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 21:00:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 21:00:00][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 21:00:00][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 3
  [DEBUG] [2020-12-14 21:00:00][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c786f9c]
  [DEBUG] [2020-12-14 21:00:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c786f9c]
  [DEBUG] [2020-12-14 21:00:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c786f9c]
  [DEBUG] [2020-12-14 21:00:00][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c786f9c]
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 21:00:00][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 21:00:04][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 1ms
  [DEBUG] [2020-12-14 21:00:10][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 21:00:10][org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]Adding transactional method 'GoodsServiceImpl.updateStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByPrimaryKey]<==      Total: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==>  Preparing: update tb_goods set seller_id = ?, goods_name = ?, default_item_id = ?, audit_status = ?, is_marketable = ?, brand_id = ?, caption = ?, category1_id = ?, category2_id = ?, category3_id = ?, small_pic = ?, price = ?, type_template_id = ?, is_enable_spec = ?, is_delete = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]==> Parameters: qqqq(String), wwww(String), null, 1(String), null, 2(Long), wwww(String), 558(Long), 559(Long), 560(Long), null, 6666.00(BigDecimal), 35(Long), 1(String), null, 149187842867979(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id = ? ) 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new2 - 阿尔卡特 (OT-927) 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 299000.00(BigDecimal), null, 99999(Integer), (String), http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-04-11 20:38:38.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 536563(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: new8- 三星 W999 黑色 电信3G手机 双卡双待双通(String), 下单送12000毫安移动电源！双3.5英寸魔焕炫屏，以非凡视野纵观天下时局，尊崇翻盖设计，张弛中，尽显从容气度！(String), 11.00(BigDecimal), null, 99999(Integer), (String), http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:27:54.0(Timestamp), 2015-04-12 17:10:43.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 562379(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-979) 冰川白 联通3G手机(String), 清仓！仅上海仓有货！(String), 309.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 605616(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-927) 单电版 炭黑 联通3G手机 双卡双待(String), 清仓！仅北京，武汉仓有货！(String), 249.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:33:18.0(Timestamp), 2015-03-08 21:33:18.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 635906(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 玫红 AK47 加强版 联通3G手机(String), 仅上海，广州，沈阳仓有货！预购从速！(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:32:31.0(Timestamp), 2015-03-08 21:32:31.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679532(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 阿尔卡特 (OT-986+) 曜石黑 AK47 加强版 联通3G手机(String), 少量库存，抢完即止！<a  target="blank"  href="http://sale.jd.com/act/bxYeI1346g.html?erpad_source=erpad">“领券更优惠！”</a>(String), 499.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:31:36.0(Timestamp), 2015-03-08 21:31:36.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 阿尔卡特(String), {"机身内存":"16G","网络":"联通3G"}(String), 阿尔卡特(String), 679533(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 B9120 钛灰色 联通3G手机 双卡双待双通(String), 下单即送10400毫安移动电源！再赠手机魔法盒！(String), 4399.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:29:27.0(Timestamp), 2015-03-08 21:29:27.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 691300(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: 三星 Note II (N7100) 云石白 联通3G手机(String), 经典回顾！超值价格值得拥有。(String), 1699.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t3457/294/236823024/102048/c97f5825/58072422Ndd7e66c4.jpg(String), 560(Long), 1(String), 2015-03-08 21:28:16.0(Timestamp), 2015-03-08 21:28:16.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 三星(String), {"机身内存":"16G","网络":"联通3G"}(String), 三星(String), 738388(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 64G(String), null, 6666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"64G"}(String), qq(String), 1369284(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 移动4G 128G(String), null, 66666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"移动4G","机身内存":"128G"}(String), qq(String), 1369285(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 64G(String), null, 666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"64G"}(String), qq(String), 1369286(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww 电信4G 128G(String), null, 6666666.00(BigDecimal), null, 99999(Integer), null, http://192.168.188.146/group1/M00/00/00/wKi8kl_F65KAFsn_AAA04y6VnrQ668.png(String), 560(Long), 1(String), 2020-12-10 21:52:49.0(Timestamp), 2020-12-10 21:52:49.0(Timestamp), null, null, null, 0(String), 149187842867979(Long), qqqq(String), null, 手机(String), 华为(String), {"网络":"电信4G","机身内存":"128G"}(String), qq(String), 1369287(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: ww(String), 111111111111111111111111111111111111(String), 1111.00(BigDecimal), null, 99999(Integer), null, http://img12.360buyimg.com/n1/s450x450_jfs/t3034/299/2060854617/119711/577e85cb/57d11b6cN1fd1194d.jpg(String), 560(Long), 1(String), 2015-03-08 21:26:40.0(Timestamp), 2015-03-08 21:26:40.0(Timestamp), null, null, null, 1(String), 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369288(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516] from current transaction
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==>  Preparing: update tb_item set title = ?, sell_point = ?, price = ?, stock_count = ?, num = ?, barcode = ?, image = ?, categoryId = ?, status = ?, create_time = ?, update_time = ?, item_sn = ?, cost_pirce = ?, market_price = ?, is_default = ?, goods_id = ?, seller_id = ?, cart_thumbnail = ?, category = ?, brand = ?, spec = ?, seller = ? where id = ? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]==> Parameters: wwww(String), 移动用户请认准移动4G版iPhone，带您畅享飞速4G/3G网络，快人一步！(String), 6666.00(BigDecimal), null, 99999(Integer), null, http://img10.360buyimg.com/n1/s450x450_jfs/t4111/232/1823016308/39740/762c40b1/589ab57bNc19054fc.jpg(String), 560(Long), 1(String), 2015-03-08 21:29:11.0(Timestamp), 2015-03-08 21:29:11.0(Timestamp), null, null, null, null, 149187842867979(Long), 1(String), null, 手机(String), 华为(String), {"机身内存":"16G","网络":"移动4G"}(String), 华为(String), 1369289(Long)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.updateByPrimaryKey]<==    Updates: 1
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@591f3516]
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 21:00:10][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 21:00:10][org.springframework.transaction.annotation.AnnotationTransactionAttributeSource]Adding transactional method 'GoodsServiceImpl.findItemListByGoodsIdandStatus' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findItemListByGoodsIdandStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c14725e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.selectByExample]==>  Preparing: select id, title, sell_point, price, stock_count, num, barcode, image, categoryId, status, create_time, update_time, item_sn, cost_pirce, market_price, is_default, goods_id, seller_id, cart_thumbnail, category, brand, spec, seller from tb_item WHERE ( goods_id in ( ? ) and status = ? ) 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.selectByExample]==> Parameters: 149187842867979(Long), 1(String)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbItemMapper.selectByExample]<==      Total: 14
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c14725e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c14725e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c14725e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c14725e]
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 21:00:10][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c71b96e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c71b96e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c71b96e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c71b96e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c71b96e]
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 21:00:10][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.6.4, current host: 10.10.43.164
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Creating new transaction with name [com.offcn.sellergoods.service.impl.GoodsServiceImpl.findPage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Acquired Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] for JDBC transaction
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] to manual commit
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] will be managed by Spring
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==>  Preparing: SELECT count(*) FROM tb_goods WHERE (audit_status LIKE ? AND is_delete IS NULL) 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]==> Parameters: %0%(String)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample_COUNT]<==      Total: 1
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample]==>  Preparing: select id, seller_id, goods_name, default_item_id, audit_status, is_marketable, brand_id, caption, category1_id, category2_id, category3_id, small_pic, price, type_template_id, is_enable_spec, is_delete from tb_goods WHERE ( audit_status like ? and is_delete is null ) limit ?,? 
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample]==> Parameters: %0%(String), 0(Integer), 10(Integer)
  [DEBUG] [2020-12-14 21:00:10][com.offcn.mapper.TbGoodsMapper.selectByExample]<==      Total: 2
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 21:00:10][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d10672e]
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Initiating transaction commit
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Committing JDBC transaction on Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912]
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceTransactionManager]Releasing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3ebb7912] after transaction
  [DEBUG] [2020-12-14 21:00:10][org.springframework.jdbc.datasource.DataSourceUtils]Returning JDBC Connection to DataSource
  [DEBUG] [2020-12-14 21:00:18][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 21:00:31][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 21:00:44][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  [DEBUG] [2020-12-14 21:00:58][org.apache.zookeeper.ClientCnxn]Got ping response for sessionid: 0x1765f2636020014 after 0ms
  